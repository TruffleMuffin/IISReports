@section scripts
{
    <script type="text/javascript" src="/Scripts/underscore-min.js"></script>
    <script type="text/javascript" src="/Scripts/highcharts.js"></script>
    <script type="text/javascript" src="/Scripts/modules/exporting.js"></script>

    <script type="text/javascript">
        $(function () {
            update('/API/Logs/Agents/2013/7');
            $('#go').click(function() {
                update('/API/Logs/Agents/' + $('#year').val() + '/' + $('#month').val());
            });
        });

        function update(endpoint) {
            $.get(endpoint, function (data) {
                data = _.filter(data, function (model) { return model.UserAgent.indexOf("ELB-HealthChecker") < 0 && model.UserAgent.indexOf("NewRelicPinger") < 0; });
                var totalHits = _.reduce(data, function (memo, model) { return memo + model.Count }, 0);
                $('#totalvists').html(totalHits);
                var formattedData = _.map(data, function (model) {
                    var name = model.AgentInfo.Family;
                    if (model.AgentInfo.Major != null && model.AgentInfo.Major != '') {
                        name += '-' + model.AgentInfo.Major;
                    }
                    if (model.AgentInfo.Minor != null && model.AgentInfo.Minor != '') {
                        name += '-' + model.AgentInfo.Minor;
                    }
                    if (model.AgentInfo.Patch != null && model.AgentInfo.Patch != '') {
                        name += '-' + model.AgentInfo.Patch;
                    }
                    return [name, ((model.Count / totalHits) * 100)];
                });
                var seriesData = [];
                _.each(formattedData, function (model) {
                    var seriesItem = _.find(seriesData, function (item) { return item[0] == model[0]; });
                    if (seriesItem == undefined) {
                        seriesData.push(model);
                    } else {
                        seriesData[_.indexOf(seriesData, seriesItem)][1] += model[1];
                    }
                });
                $('#agent-breakdown').empty();
                _.each(seriesData, function(model) {
                    $('#agent-breakdown').append('<li>' + model[0] + ' - ' + Math.floor((model[1] / 100) * totalHits) + '</li>');
                });

                $('#container').highcharts({
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false
                    },
                    title: {
                        text: 'Browser Coverage'
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                color: '#000000',
                                connectorColor: '#000000',
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                            }
                        }
                    },
                    series: [{
                        type: 'pie',
                        name: 'Browser share',
                        data: seriesData
                    }]
                });
            }).error(function() {
                alert('no data or error');
            });
        }
    </script>
}
<div>
    <select id="month">
        <option value="1">January</option>
        <option value="2">February</option>
        <option value="3">March</option>
        <option value="4">April</option>
        <option value="5">May</option>
        <option value="6">June</option>
        <option value="7">July</option>
        <option value="8">August</option>
        <option value="9">September</option>
        <option value="10">October</option>
        <option value="11">November</option>
        <option value="12">December</option>
    </select>
    
    <select id="year">
        <option value="2013">2013</option>
        <option value="2014">2014</option>
    </select>
    
    <button id="go">Go</button>
</div>
<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="summary data">
    <p>There were a total number of <span id="totalvists"></span> hits for this period.</p>
    <ul id="agent-breakdown">
        
    </ul>
</div>